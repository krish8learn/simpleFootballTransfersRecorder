// Code generated by sqlc. DO NOT EDIT.
// source: transfer.sql

package DB

import (
	"context"
	
	"testing"
	"database/sql"

	"github.com/krish8learn/simpleFootballTransfersRecorder/Util"
	"github.com/stretchr/testify/require"
)
var testPlayerData Player

var testFootballClubDestionation Footballclub



func TestQueries_Createtransfer(t *testing.T) {
	testPlayerData = CreateTestplayerdata()
	testFootballClubDestionation = CreateTestfootballclubdataDestionation()

	arg := CreatetransferParams{
		Season: Util.RandomSeason(),
		PlayerID: testPlayerData.PID,
		SourceClub: testPlayerData.FootballclubID,
		DestinationClub:testFootballClubDestionation.FcID ,
		Amount:Util.RandomAmount(),
	}

	testTransfer, testTransferErr := testQueries.Createtransfer(context.Background(),arg )

	require.NoError(t, testTransferErr)
	require.NotEmpty(t, testTransfer)
	require.Equal(t, arg.Amount, testTransfer.Amount)
	require.Equal(t, arg.Season, testTransfer.Season)
	require.Equal(t, arg.PlayerID, testTransfer.PlayerID)
	require.Equal(t, arg.SourceClub, testTransfer.SourceClub)
	require.Equal(t, arg.DestinationClub, testTransfer.DestinationClub)
}

func TestQueries_Deletetransfer(t *testing.T) {
	testTransfer:= CreateTestTransferdata()

	testDeleteTransferErr := testQueries.Deletetransfer(context.Background(), testTransfer.TID)

	require.NoError(t, testDeleteTransferErr)

	testDeletedGetTransferdata , testDeletedGetTransferErr := testQueries.GettransferByTransferid(context.Background(), testTransfer.TID)
	require.EqualError(t, testDeletedGetTransferErr, sql.ErrNoRows.Error())
	require.Empty(t, testDeletedGetTransferdata)

}

func TestQueries_GettransferByPlayerid(t *testing.T) {
	testTransfer:= CreateTestTransferdata()

	testGetTransferdata , testGetTransferErr := testQueries.GettransferByPlayerid(context.Background(), testTransfer.PlayerID)

	require.NoError(t,testGetTransferErr)
	require.Equal(t, testTransfer, testGetTransferdata[0])
}

func TestQueries_GettransferByTransferid(t *testing.T) {
	testTransfer:= CreateTestTransferdata()

	testGetTransferdata , testGetTransferErr := testQueries.GettransferByTransferid(context.Background(), testTransfer.TID)

	require.NoError(t,testGetTransferErr)
	require.Equal(t, testTransfer, testGetTransferdata)
}

func TestQueries_Updatetransfer(t *testing.T) {
	testTransfer:= CreateTestTransferdata()

	arg := UpdatetransferParams{
		TID: testTransfer.TID,
		Amount: testTransfer.Amount+10000,
	}

 	testUpdatedtransferErr := testQueries.Updatetransfer(context.Background(), arg)

 	require.NoError(t,testUpdatedtransferErr)

	 testGetTransferdata , testGetTransferErr := testQueries.GettransferByTransferid(context.Background(), testTransfer.TID)

	require.NoError(t,testGetTransferErr)

	require.Equal(t,arg.TID, testGetTransferdata.TID)
	require.Equal(t,arg.Amount, testGetTransferdata.Amount)
}
